services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.3
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-logs:/var/lib/zookeeper/log

  kafka-broker-1:
    image: confluentinc/cp-kafka:7.4.3
    hostname: kafka-broker-1
    container_name: kafka-broker-1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"  # PLAINTEXT
      - "9093:9093"  # SSL
      - "9101:9101"  # JMX
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      
      # Упрощенные протоколы (PLAINTEXT + SSL)
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SSL:SSL,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,SSL://localhost:9093,PLAINTEXT_INTERNAL://kafka-broker-1:19092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,SSL://0.0.0.0:9093,PLAINTEXT_INTERNAL://0.0.0.0:19092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      
      # SSL настройки - filename для Confluent
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-broker-1.server.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: ssl-passwords.properties
      KAFKA_SSL_KEY_CREDENTIALS: ssl-passwords.properties
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.server.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: ssl-passwords.properties
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: " "
      KAFKA_SSL_CLIENT_AUTH: none
      
      # Основные настройки
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      
    volumes:
      - kafka-broker-1-data:/var/lib/kafka/data
      - ./ssl:/etc/kafka/secrets

  kafka-broker-2:
    image: confluentinc/cp-kafka:7.4.3
    hostname: kafka-broker-2
    container_name: kafka-broker-2
    depends_on:
      - zookeeper
    ports:
      - "9095:9092"
      - "9096:9093"
      - "9102:9102"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SSL:SSL,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9095,SSL://localhost:9096,PLAINTEXT_INTERNAL://kafka-broker-2:19092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,SSL://0.0.0.0:9093,PLAINTEXT_INTERNAL://0.0.0.0:19092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      
      # SSL настройки - filename для Confluent
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-broker-2.server.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: ssl-passwords.properties
      KAFKA_SSL_KEY_CREDENTIALS: ssl-passwords.properties
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.server.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: ssl-passwords.properties
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: " "
      KAFKA_SSL_CLIENT_AUTH: none
      
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9102
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      
    volumes:
      - kafka-broker-2-data:/var/lib/kafka/data
      - ./ssl:/etc/kafka/secrets

  kafka-broker-3:
    image: confluentinc/cp-kafka:7.4.3
    hostname: kafka-broker-3
    container_name: kafka-broker-3
    depends_on:
      - zookeeper
    ports:
      - "9098:9092"
      - "9099:9093"
      - "9103:9103"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SSL:SSL,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9098,SSL://localhost:9099,PLAINTEXT_INTERNAL://kafka-broker-3:19092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,SSL://0.0.0.0:9093,PLAINTEXT_INTERNAL://0.0.0.0:19092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      
      # SSL настройки - filename для Confluent
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-broker-3.server.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: ssl-passwords.properties
      KAFKA_SSL_KEY_CREDENTIALS: ssl-passwords.properties
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.server.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: ssl-passwords.properties
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: " "
      KAFKA_SSL_CLIENT_AUTH: none
      
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9103
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      
    volumes:
      - kafka-broker-3-data:/var/lib/kafka/data
      - ./ssl:/etc/kafka/secrets

# SSL инициализация не требуется - Kafka запускается с простым TLS

  # Остальные сервисы (мониторинг, аналитика)
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus-data:/prometheus

  grafana:
    image: grafana/grafana:10.2.0
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning

  alertmanager:
    image: prom/alertmanager:v0.26.0
    container_name: alertmanager
    restart: unless-stopped
    ports:
      - "9394:9093"
    volumes:
      - ./monitoring/alertmanager:/etc/alertmanager
      - alertmanager-data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  spark-master:
    image: bitnami/spark:3.5.0
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=yes
      - SPARK_RPC_ENCRYPTION_ENABLED=yes
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=yes
      - SPARK_SSL_ENABLED=yes
    ports:
      - "8080:8080"
      - "7077:7077"
    volumes:
      - ./analytics:/opt/bitnami/spark/analytics
      - ./data:/opt/bitnami/spark/data
      - ./ssl:/opt/bitnami/spark/ssl

  spark-worker:
    image: bitnami/spark:3.5.0
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=yes
      - SPARK_RPC_ENCRYPTION_ENABLED=yes
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=yes
      - SPARK_SSL_ENABLED=yes
    depends_on:
      - spark-master
    volumes:
      - ./analytics:/opt/bitnami/spark/analytics
      - ./data:/opt/bitnami/spark/data
      - ./ssl:/opt/bitnami/spark/ssl

volumes:
  zookeeper-data:
  zookeeper-logs:
  kafka-broker-1-data:
  kafka-broker-2-data:
  kafka-broker-3-data:
  prometheus-data:
  grafana-data:
  alertmanager-data: 