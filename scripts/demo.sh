#!/bin/bash

# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —Ä–∞–±–æ—Ç—ã –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞

set -e

echo "üé¨ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞"
echo "=================================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã
check_system() {
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã..."
    
            services=(
            "localhost:9092:Kafka"
            "localhost:8083:Kafka Connect"
            "localhost:8080:Spark"
        )
    
    for service in "${services[@]}"; do
        IFS=':' read -r host port name <<< "$service"
        if nc -z "$host" "$port" 2>/dev/null; then
            echo "‚úÖ $name –≥–æ—Ç–æ–≤"
        else
            echo "‚ùå $name –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ $host:$port"
            echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É –∫–æ–º–∞–Ω–¥–æ–π: ./scripts/start_system.sh"
            exit 1
        fi
    done
    
    echo ""
}

# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Shop API
demo_shop_api() {
    echo "üè™ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Shop API (–æ—Ç–ø—Ä–∞–≤–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤ Kafka)"
    echo "------------------------------------------------"
    
    echo "üì¶ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –∏–∑ —Ñ–∞–π–ª–∞ –≤ Kafka..."
    python -m src.shop_api.producer --file data/products.json --delay 0.5 &
    SHOP_PID=$!
    
    echo "‚è≥ –ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤..."
    sleep 10
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–¥—é—Å–µ—Ä
    kill $SHOP_PID 2>/dev/null || true
    
    echo "‚úÖ –¢–æ–≤–∞—Ä—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ —Ç–æ–ø–∏–∫ shop-products"
    echo ""
}

# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
demo_filtering() {
    echo "üîç –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤"
    echo "----------------------------------------------"
    
    echo "üö´ –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫..."
    python -m src.stream_processor.banned_filter ban \
        --product-id "BANNED-TEST-001" \
        --name "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä" \
        --reason "–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏"
    
    echo "üìã –¢–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤:"
    python -m src.stream_processor.banned_filter list
    
    echo "üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é (10 —Å–µ–∫—É–Ω–¥)..."
    python -m src.stream_processor.banned_filter start &
    FILTER_PID=$!
    
    sleep 10
    kill $FILTER_PID 2>/dev/null || true
    
    echo "‚úÖ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    echo ""
}

# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Client API
demo_client_api() {
    echo "üë• –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Client API (–ø–æ–∏—Å–∫ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏)"
    echo "------------------------------------------------"
    
    echo "üîç –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∑–∞–ø—Ä–æ—Å—É '—É–º–Ω—ã–µ —á–∞—Å—ã':"
    python -m src.client_api.client search "—É–º–Ω—ã–µ —á–∞—Å—ã" --limit 3
    
    echo ""
    echo "üîç –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∑–∞–ø—Ä–æ—Å—É '—Å–º–∞—Ä—Ç—Ñ–æ–Ω':"
    python -m src.client_api.client search "—Å–º–∞—Ä—Ç—Ñ–æ–Ω" --limit 2
    
    echo ""
    echo "üí° –ó–∞–ø—Ä–æ—Å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:"
    python -m src.client_api.client recommendations \
        --category "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞" \
        --max-price 30000 \
        --brand "XYZ"
    
    echo ""
    echo "üìä –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π Client API:"
    python -m src.client_api.client status
    
    echo ""
}

# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
demo_analytics() {
    echo "üìä –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–π —Å–∏—Å—Ç–µ–º—ã"
    echo "------------------------------------"
    
    echo "üß† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:"
    python -m src.analytics.spark_analytics test-recommendations \
        "demo-user-001" \
        --category "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞" \
        --max-price 50000
    
    echo ""
    echo "‚ö° –ó–∞–ø—É—Å–∫ Spark –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ (15 —Å–µ–∫—É–Ω–¥)..."
    echo "   (–í —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ)"
    
    timeout 15 python -m src.analytics.spark_analytics start || true
    
    echo "‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    echo ""
}

# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
demo_monitoring() {
    echo "üìà –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
    echo "----------------------------------"
    
    echo "üéØ –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:"
    echo "‚Ä¢ Grafana:      http://localhost:3000 (admin/grafana)"
    echo "‚Ä¢ Prometheus:   http://localhost:9090"
    echo "‚Ä¢ Spark UI:     http://localhost:8080"
    
    echo ""
    echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç—Ä–∏–∫ Prometheus:"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Prometheus
    if curl -s http://localhost:9090/-/healthy >/dev/null 2>&1; then
        echo "‚úÖ Prometheus –¥–æ—Å—Ç—É–ø–µ–Ω"
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –º–µ—Ç—Ä–∏–∫
        echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏:"
        curl -s http://localhost:9090/api/v1/label/__name__/values | \
            jq -r '.data[]' | grep -E "(kafka|up)" | head -5 || echo "   –ú–µ—Ç—Ä–∏–∫–∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è..."
    else
        echo "‚ö†Ô∏è  Prometheus –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
    
    echo ""
    echo "üîî –ü—Ä–æ–≤–µ—Ä–∫–∞ Alertmanager:"
    if curl -s http://localhost:9093/-/healthy >/dev/null 2>&1; then
        echo "‚úÖ Alertmanager –¥–æ—Å—Ç—É–ø–µ–Ω"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∞–ª–µ—Ä—Ç—ã
        alerts=$(curl -s http://localhost:9093/api/v1/alerts | jq '.data | length' 2>/dev/null || echo "0")
        echo "üì¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∞–ª–µ—Ä—Ç–æ–≤: $alerts"
    else
        echo "‚ö†Ô∏è  Alertmanager –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
    
    echo ""
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã—Ö–æ–¥–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
demo_output_files() {
    echo "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã—Ö–æ–¥–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"
    echo "---------------------------"
    
    echo "üìÑ –§–∞–π–ª—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ data/output/:"
    if [ -d "data/output" ]; then
        ls -la data/output/ || echo "   –ü—É—Å—Ç–æ"
    else
        echo "   –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
    
    echo ""
    echo "üìÑ –§–∞–π–ª—ã Kafka Connect:"
    if [ -d "data/kafka-connect-data" ]; then
        ls -la data/kafka-connect-data/ || echo "   –ü—É—Å—Ç–æ"
    else
        echo "   –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
    
    echo ""
    echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Kafka —Ç–æ–ø–∏–∫–æ–≤:"
    echo "docker exec kafka-broker-1 kafka-topics.sh --bootstrap-server localhost:9092 --describe --topic shop-products"
    
    echo ""
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
main() {
    echo "–ù–∞—á–∏–Ω–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã..."
    sleep 3
    
    check_system
    
    echo "1Ô∏è‚É£  –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Shop API"
    demo_shop_api
    
    echo "2Ô∏è‚É£  –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏"
    demo_filtering
    
    echo "3Ô∏è‚É£  –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Client API"
    demo_client_api
    
    echo "4Ô∏è‚É£  –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"
    demo_analytics
    
    echo "5Ô∏è‚É£  –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
    demo_monitoring
    
    echo "6Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤"
    demo_output_files
    
    echo "üéâ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    echo "========================"
    echo ""
    echo "üîß –î–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏–∑—É—á–µ–Ω–∏—è:"
    echo "‚Ä¢ –û—Ç–∫—Ä–æ–π—Ç–µ Grafana: http://localhost:3000"
    echo "‚Ä¢ –ò–∑—É—á–∏—Ç–µ Kafka —Ç–æ–ø–∏–∫–∏: docker exec kafka-broker-1 kafka-topics.sh --list --bootstrap-server localhost:9092"
    echo "‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –ª–æ–≥–∏: docker compose logs -f"
    echo "‚Ä¢ –ü–æ—ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å CLI –∫–æ–º–∞–Ω–¥–∞–º–∏ –∏–∑ README.md"
    echo ""
    echo "üìù –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–∏—Å—Ç–µ–º—ã: docker compose down"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
trap 'echo "‚ùå –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞"; exit 1' ERR

# –ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
main 